{ pkgs, ... }:
{
  environment.systemPackages = with pkgs; [
    wayland
    xwayland
    wlr-randr
    meson
    wayland-protocols
    wlogout
    # wayland-scanner
    wayland-utils
    wl-clipboard
    wlroots
    libsForQt5.qt5.qtwayland
    qt5.qtwayland
    qt6.qtwayland
    wlsunset
    xdg-utils
    xdg-desktop-portal
    xdg-desktop-portal-gtk
    xdg-desktop-portal-hyprland
    vulkan-loader
    vulkan-validation-layers
    # greetd.tuigreet
    # sddm
    gdm
  ];

  services.xserver = {
    enable = true;
    xkb = {
    layout = "us";
    };
    # displayManager.sddm = {
    #   enable = true;
    #   wayland = true;
    #   theme = "where_is_my_sddm_theme";
    # };
    displayManager.gdm = {
      enable = true;
      wayland = true;
    };
  };

  # services.greetd = {
  #   enable = true;
  #   vt = 3;
  #   settings = {
  #     default_session = {
  #       # Wayland Desktop Manager is installed only for user ryan via home-manager!
  #       # user = username;
  #       user = "nightwatcher";
  #       # .wayland-session is a script generated by home-manager, which links to the current wayland compositor(sway/hyprland or others).
  #       # with such a vendor-no-locking script, we can switch to another wayland compositor without modifying greetd's config here.
  #       # command = "$HOME/.wayland-session"; # start a wayland session directly without a login manager
  #       command = "${pkgs.greetd.tuigreet}/bin/tuigreet --time --cmd Hyprland"; # start Hyprland with a TUI login manager
  #     };
  #   };
  # };

  security = {
    pam.services.swaylock = {
      text = ''
        auth include login
      '';
    };
    pam.services.login.enableGnomeKeyring = true;
  };

  xdg.portal = {
    enable = true;
    wlr.enable = true;
    extraPortals = [
      pkgs.xdg-desktop-portal-gtk
      pkgs.xdg-desktop-portal
    ];
    configPackages = [
      pkgs.xdg-desktop-portal-gtk
      pkgs.xdg-desktop-portal-hyprland
      pkgs.xdg-desktop-portal
    ];
  };
}
